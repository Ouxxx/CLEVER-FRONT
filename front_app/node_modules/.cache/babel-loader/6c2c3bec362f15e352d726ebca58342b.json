{"remainingRequest":"/home/hatouxx/proj/learning-front/front_app/node_modules/babel-loader/lib/index.js!/home/hatouxx/proj/learning-front/front_app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/hatouxx/proj/learning-front/front_app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/hatouxx/proj/learning-front/front_app/src/components/create_user/User_codes_v2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/hatouxx/proj/learning-front/front_app/src/components/create_user/User_codes_v2.vue","mtime":1585331744308},{"path":"/home/hatouxx/proj/learning-front/front_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hatouxx/proj/learning-front/front_app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hatouxx/proj/learning-front/front_app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hatouxx/proj/learning-front/front_app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGlucHV0Rm9ybSBmcm9tICIuLy4uL2lucHV0cy9pbnB1dF9mb3JtX3YxIjsKCnZhciBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJykuZGVmYXVsdDsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBpbnB1dEZvcm06IGlucHV0Rm9ybQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGVtYWlsQ29kZTogJycsCiAgICAgIHBob25lQ29kZTogJycKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBzYXZlQ29kZUVtYWlsOiBmdW5jdGlvbiBzYXZlQ29kZUVtYWlsKGNvZGUpIHsKICAgICAgdGhpcy5lbWFpbENvZGUgPSBjb2RlLnZhbHVlOwogICAgfSwKICAgIHNhdmVDb2RlUGhvbmU6IGZ1bmN0aW9uIHNhdmVDb2RlUGhvbmUoY29kZSkgewogICAgICB0aGlzLnBob25lQ29kZSA9IGNvZGUudmFsdWU7CiAgICB9LAogICAgY2hlY2tDb2RlczogZnVuY3Rpb24gY2hlY2tDb2RlcygpIHsKICAgICAgLyogCiAgICAgIFRPRE86IGZhaXJlIGVuIHNvcnRlIGRlIHZlcmlmaWVyIGxlIHRva2VuIGV0IGxlcyBjb2Rlcy4KICAgICAgICAgICAgU2kgY29kZXMgPT09IE9LID0+IGNyZWF0aW9uIGR1IHVzZXIgcGx1cyBnbyBwYWdlIHN1aXZhbnRlCiAgICAgICovCiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCdjb25maXJtYXRpb24nKTsKICAgIH0sCiAgICBjaGVja0NvZGVzMjogZnVuY3Rpb24gY2hlY2tDb2RlczIoKSB7CiAgICAgIGNvbnNvbGUubG9nKCdvbiBlbnRyZSBkYW5zIGNoZWNrQ29kZTInKTsKICAgICAgYXhpb3MoewogICAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICAgIHVybDogdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRBZGRyICsgJzonICsgdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRQb3J0ICsgJy9hcGkvdXNlci9zaWdudXAnLAogICAgICAgIGRhdGE6IHsKICAgICAgICAgIC8vIHJlY3VwZXJlciBsZXMgaW5mb3MgZHUgc3RvcmUKICAgICAgICAgIGVtYWlsOiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldEVtYWlsLAogICAgICAgICAgcGhvbmU6IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0UGhvbmUsCiAgICAgICAgICBwaG9uZUNvZGU6IHRoaXMucGhvbmVDb2RlLAogICAgICAgICAgZW1haWxDb2RlOiB0aGlzLmVtYWlsQ29kZQogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7IC8vIHRoaXMuJHJvdXRlci5wdXNoKCcvY3JlYXRlL3VzZXIvdmVyaWZpY2F0aW9uJyk7ICAgICAgICAgICAgICAgIAogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAvLyBUT0RPIDogYWZmaWNoZXIgdW5lIGVycmV1ciBwb3VyIGxlIGNsaWVudAogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["User_codes_v2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAqBA,OAAA,SAAA;;AAEA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA,CAAA,OAAA;;AAGA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,SAAA,EAAA;AAAA,GADA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA;AAFA,KAAA;AAIA,GARA;AAUA,EAAA,OAAA,EAAA;AAEA,IAAA,aAFA,yBAEA,IAFA,EAEA;AACA,WAAA,SAAA,GAAA,IAAA,CAAA,KAAA;AACA,KAJA;AAKA,IAAA,aALA,yBAKA,IALA,EAKA;AACA,WAAA,SAAA,GAAA,IAAA,CAAA,KAAA;AACA,KAPA;AASA,IAAA,UATA,wBASA;AACA;;;;AAKA,WAAA,OAAA,CAAA,IAAA,CAAA,cAAA;AACA,KAhBA;AAkBA,IAAA,WAlBA,yBAkBA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,0BAAA;AACA,MAAA,KAAA,CAAA;AACA,QAAA,MAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA,KAAA,MAAA,CAAA,OAAA,CAAA,OAAA,GAAA,GAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,OAAA,GAAA,kBAFA;AAGA,QAAA,IAAA,EAAA;AACA;AACA,UAAA,KAAA,EAAA,KAAA,MAAA,CAAA,OAAA,CAAA,QAFA;AAGA,UAAA,KAAA,EAAA,KAAA,MAAA,CAAA,OAAA,CAAA,QAHA;AAIA,UAAA,SAAA,EAAA,KAAA,SAJA;AAKA,UAAA,SAAA,EAAA,KAAA;AALA;AAHA,OAAA,CAAA,CAWA,IAXA,CAWA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,EADA,CAEA;AACA,OAdA,EAeA,KAfA,CAeA,UAAA,KAAA,EAAA;AACA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,OAlBA;AAmBA;AAvCA;AAVA,CAAA","sourcesContent":["<template>\n    <div class=\"form-data\"  >\n\n        <input-form input-id=\"codemail\" input-type=\"text\" \n            info-label=\"Code reçu par email\" \n            event=\"codemail\" @codemail=\"saveCodeEmail\" >\n        </input-form>\n\n        <input-form input-id=\"codephone\" input-type=\"text\" \n            info-label=\"Code reçu par téléphone\" \n            event=\"codephone\" @codephone=\"saveCodePhone\" >\n        </input-form>\n\n        <button class=\"form-button-ok\" @click=\"checkCodes2()\">\n            <p>Suivant</p>\n        </button>\n    </div>\n\n</template>\n\n<script>\nimport inputForm from './../inputs/input_form_v1'\n\nconst axios = require('axios').default\n\n\nexport default {\n    components: {inputForm},\n\n    data () {\n        return {\n            emailCode: '',\n            phoneCode: ''\n        }\n    },\n\n    methods : {\n\n        saveCodeEmail (code) {\n            this.emailCode = code.value\n        },\n        saveCodePhone (code) {\n            this.phoneCode = code.value\n        },\n        \n        checkCodes () {\n            /* \n            TODO: faire en sorte de verifier le token et les codes.\n                  Si codes === OK => creation du user plus go page suivante\n            */\n           \n            this.$router.push('confirmation');\n        },\n\n        checkCodes2 () {\n            console.log('on entre dans checkCode2');\n            axios({\n                method: 'post',\n                url: this.$store.getters.getAddr + ':' + this.$store.getters.getPort + '/api/user/signup',\n                data:  {\n                    // recuperer les infos du store\n                    email: this.$store.getters.getEmail,\n                    phone: this.$store.getters.getPhone,\n                    phoneCode: this.phoneCode,\n                    emailCode: this.emailCode\n                }\n            })\n            .then(response => {\n                console.log(response);\n                // this.$router.push('/create/user/verification');                \n            })\n            .catch(error => {\n                 // TODO : afficher une erreur pour le client\n                console.log(error);            \n            })\n        }\n\n    }\n\n}\n</script>\n\n<style src=\"../styles/style_forms.css\"></style>\n\n"],"sourceRoot":"src/components/create_user"}]}