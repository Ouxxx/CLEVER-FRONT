{"remainingRequest":"/home/hatouxx/priv/cleverhero/cleverhero/node_modules/babel-loader/lib/index.js!/home/hatouxx/priv/cleverhero/cleverhero/node_modules/eslint-loader/index.js??ref--13-0!/home/hatouxx/priv/cleverhero/cleverhero/src/services/api/dataValidater.js","dependencies":[{"path":"/home/hatouxx/priv/cleverhero/cleverhero/src/services/api/dataValidater.js","mtime":1574707341893},{"path":"/home/hatouxx/priv/cleverhero/cleverhero/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/hatouxx/priv/cleverhero/cleverhero/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/hatouxx/priv/cleverhero/cleverhero/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CgovKiBzZXJ2aWNlIHF1aSBkZXZyYSBkZW1hbmRlciBhdSBzZXJ2ZXVyIGJhY2tlbmQgZGUgZ2VuZXJlciBldCBkZSB2ZXJpZmllciAyIGNvZGVzLiAKICAgTGUgcHJlbWllciBzZXJhIHJlY3UgcGFyIGwndXRpbGlzYXRldXIgcGFyIG1haWwgdGFuZGlzIHF1ZSBsJ2F1dHJlIHNlcmEgcmVjdSBwYXIgc21zLiAqLwp2YXIgb25DcmVhdGlvblVzZXJzID0gW107CnZhciB0b2tlbkdlbmVyYXRvciA9IDA7CgpmdW5jdGlvbiBnZXRSYW5kb21JbnQobWF4KSB7CiAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIE1hdGguZmxvb3IobWF4KSk7Cn0KCmV4cG9ydCBkZWZhdWx0IHsKICBnZXRUb2tlbjogZnVuY3Rpb24gZ2V0VG9rZW4odXNlcikgewogICAgLyogdmVyaWZpY2F0aW9ucyAqLwogICAgaWYgKG9uQ3JlYXRpb25Vc2Vycy5maW5kKGZ1bmN0aW9uIChuZXd1c2VyKSB7CiAgICAgIHJldHVybiBuZXd1c2VyLnVzZXJkYXRhLmVtYWlsID09PSB1c2VyLmVtYWlsICYmIG5ld3VzZXIudXNlcmRhdGEucGhvbmUgPT09IHVzZXIucGhvbmUgJiYgbmV3dXNlci51c2VyZGF0YS5wd2QgPT09IHVzZXIucHdkOwogICAgfSkgIT0gdW5kZWZpbmVkKSB7CiAgICAgIHJldHVybiAtMTsKICAgIH0KCiAgICB2YXIgaWQgPSB0b2tlbkdlbmVyYXRvcisrOwogICAgb25DcmVhdGlvblVzZXJzLnB1c2goewogICAgICB1c2VyZGF0YTogdXNlciwKICAgICAgaWQ6IGlkLAogICAgICBlbWFpbGNvZGU6ICdlbWFpbENvZGUnICsgZ2V0UmFuZG9tSW50KDEwMCksCiAgICAgIHBob25lY29kZTogJ3Bob25lQ29kZScgKyBnZXRSYW5kb21JbnQoMTAwKQogICAgfSk7CiAgICByZXR1cm4gaWQ7CiAgfSwKICBnZXRFbWFpbENvZGU6IGZ1bmN0aW9uIGdldEVtYWlsQ29kZShpZCkgewogICAgdmFyIHVzciA9IG9uQ3JlYXRpb25Vc2Vycy5maW5kKGZ1bmN0aW9uIChuZXd1c2VyKSB7CiAgICAgIHJldHVybiBuZXd1c2VyLnVzZXJkYXRhLmlkID09PSBpZDsKICAgIH0pOwogICAgcmV0dXJuIHVzci5lbWFpbGNvZGU7CiAgfSwKICBnZXRQaG9uZUNvZGU6IGZ1bmN0aW9uIGdldFBob25lQ29kZShpZCkgewogICAgdmFyIHVzciA9IG9uQ3JlYXRpb25Vc2Vycy5maW5kKGZ1bmN0aW9uIChuZXd1c2VyKSB7CiAgICAgIHJldHVybiBuZXd1c2VyLnVzZXJkYXRhLmlkID09PSBpZDsKICAgIH0pOwogICAgcmV0dXJuIHVzci5waG9uZWNvZGU7CiAgfSwKICBjaGVja0VtYWlsQ29kZTogZnVuY3Rpb24gY2hlY2tFbWFpbENvZGUoKSB7CiAgICByZXR1cm4gdHJ1ZTsKICB9LAogIGNoZWNrUGhvbmVDb2RlOiBmdW5jdGlvbiBjaGVja1Bob25lQ29kZSgpIHsKICAgIHJldHVybiB0cnVlOwogIH0KfTs="},{"version":3,"sources":["/home/hatouxx/priv/cleverhero/cleverhero/src/services/api/dataValidater.js"],"names":["onCreationUsers","tokenGenerator","getRandomInt","max","Math","floor","random","getToken","user","find","newuser","userdata","email","phone","pwd","undefined","id","push","emailcode","phonecode","getEmailCode","usr","getPhoneCode","checkEmailCode","checkPhoneCode"],"mappings":";;AACA;;AAGA,IAAMA,eAAe,GAAG,EAAxB;AACA,IAAIC,cAAc,GAAG,CAArB;;AAGA,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACvB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWF,GAAX,CAA3B,CAAP;AACH;;AAGD,eAAe;AACXI,EAAAA,QADW,oBACDC,IADC,EACK;AACZ;AACA,QAAGR,eAAe,CAACS,IAAhB,CAAqB,UAAAC,OAAO;AAAA,aAAIA,OAAO,CAACC,QAAR,CAAiBC,KAAjB,KAA2BJ,IAAI,CAACI,KAAhC,IACxBF,OAAO,CAACC,QAAR,CAAiBE,KAAjB,KAA2BL,IAAI,CAACK,KADR,IAExBH,OAAO,CAACC,QAAR,CAAiBG,GAAjB,KAAyBN,IAAI,CAACM,GAFV;AAAA,KAA5B,KAE8CC,SAFjD,EAE2D;AACvD,aAAO,CAAC,CAAR;AACH;;AACD,QAAIC,EAAE,GAAGf,cAAc,EAAvB;AAGAD,IAAAA,eAAe,CAACiB,IAAhB,CAAqB;AACjBN,MAAAA,QAAQ,EAAEH,IADO;AAEjBQ,MAAAA,EAAE,EAAEA,EAFa;AAGjBE,MAAAA,SAAS,EAAE,cAAchB,YAAY,CAAC,GAAD,CAHpB;AAIjBiB,MAAAA,SAAS,EAAE,cAAcjB,YAAY,CAAC,GAAD;AAJpB,KAArB;AAMA,WAAOc,EAAP;AACH,GAlBU;AAoBXI,EAAAA,YApBW,wBAoBGJ,EApBH,EAoBO;AACd,QAAIK,GAAG,GAAGrB,eAAe,CAACS,IAAhB,CAAqB,UAAAC,OAAO;AAAA,aAAIA,OAAO,CAACC,QAAR,CAAiBK,EAAjB,KAAwBA,EAA5B;AAAA,KAA5B,CAAV;AACA,WAAOK,GAAG,CAACH,SAAX;AACH,GAvBU;AAwBXI,EAAAA,YAxBW,wBAwBGN,EAxBH,EAwBO;AACd,QAAIK,GAAG,GAAGrB,eAAe,CAACS,IAAhB,CAAqB,UAAAC,OAAO;AAAA,aAAIA,OAAO,CAACC,QAAR,CAAiBK,EAAjB,KAAwBA,EAA5B;AAAA,KAA5B,CAAV;AACA,WAAOK,GAAG,CAACF,SAAX;AACH,GA3BU;AA6BXI,EAAAA,cA7BW,4BA6BO;AAAE,WAAO,IAAP;AAAa,GA7BtB;AA8BXC,EAAAA,cA9BW,4BA8BO;AAAE,WAAO,IAAP;AAAa;AA9BtB,CAAf","sourcesContent":["\n/* service qui devra demander au serveur backend de generer et de verifier 2 codes. \n   Le premier sera recu par l'utilisateur par mail tandis que l'autre sera recu par sms. */\n\nconst onCreationUsers = [];\nvar tokenGenerator = 0;\n\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\n\nexport default {\n    getToken (user) {\n        /* verifications */\n        if(onCreationUsers.find(newuser => newuser.userdata.email === user.email \n                && newuser.userdata.phone === user.phone\n                && newuser.userdata.pwd === user.pwd) != undefined){\n            return -1;\n        }\n        var id = tokenGenerator++;\n\n\n        onCreationUsers.push({\n            userdata: user,\n            id: id,\n            emailcode: 'emailCode' + getRandomInt(100),\n            phonecode: 'phoneCode' + getRandomInt(100)\n        });\n        return id\n    },\n\n    getEmailCode (id) {  \n        var usr = onCreationUsers.find(newuser => newuser.userdata.id === id);\n        return usr.emailcode;\n    },\n    getPhoneCode (id) {  \n        var usr = onCreationUsers.find(newuser => newuser.userdata.id === id);\n        return usr.phonecode;\n    },\n    \n    checkEmailCode () { return true },\n    checkPhoneCode () { return true }\n}"]}]}